apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        config {
            keyAlias 'pankaj'
            keyPassword 'pankaj'
            storeFile file('H:/Projects/Android_Projects/ConfigureBuilds/app/keyStore/ConfigureBuildsKeyStore.jks')
            storePassword 'pankaj'
        }
    }
    compileSdkVersion 27
    /**
     * buildToolsVersion specifies the version of the SDK build tools, command-line
     * utilities, and compiler that Gradle should use to build your app. You need to
     * download the build tools using the SDK Manager.
     *
     * If you're using Android plugin 3.0.0 or higher, this property is optionalâ€”
     * the plugin uses a recommended version of the build tools by default.
     */
    buildToolsVersion "27.0.3"
    /**
     * The defaultConfig block encapsulates default settings and entries for all
     * build variants, and can override some attributes in main/AndroidManifest.xml
     * dynamically from the build system. You can configure product flavors to override
     * these values for different versions of your app.
     */
    defaultConfig {
        applicationId "configure.test.configurebuilds"
        testApplicationId "configure.test.configurebuilds.test"
        // Defines the minimum API level required to run the app.
        minSdkVersion 21
        // Specifies the API level used to test the app.
        targetSdkVersion 27
        // Defines the version number of your app.
        versionCode 1
        // Defines a user-friendly version name for your app.
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        archivesBaseName = "Config"
    }

    /**
     * The buildTypes block is where you can configure multiple build types.
     * By default, the build system defines two build types: debug and release. The
     * debug build type is not explicitly shown in the default build configuration,
     * but it includes debugging tools and is signed with the debug key. The release
     * build type applies Proguard settings and is not signed by default.
     */
    flavorDimensions "tier"
    buildTypes {

        debug {
            ext.enableCrashlytics = false
            applicationIdSuffix ".debug"
        }
        /**
         * By default, Android Studio configures the release build type to enable code
         * shrinking, using minifyEnabled, and specifies the Proguard settings file.
         */
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        free {
            // Assigns this product flavor to the "tier" flavor dimension. Specifying
            // this property is optional if you are using only one dimension.
            dimension "tier"
            versionNameSuffix "-free"
            applicationIdSuffix ".free"
            versionName '-free'

            buildConfigField 'String', 'app_name', '\"free-Config\"'
        }
        paid {
            dimension "tier"
            versionNameSuffix "-paid"
            applicationIdSuffix ".paid"
            versionName '-paid'

            buildConfigField 'String', 'app_name', '\"paid-Config\"'
        }
        dev {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-dev"
            applicationIdSuffix '.dev'
            versionName '-dev'

            buildConfigField 'String', 'app_name', '\"dev-Config\"'
        }
        prod {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-prod"
            applicationIdSuffix '.prod'
            versionName '-prod'

            buildConfigField 'String', 'app_name', '\"prod-Config\"'
        }
        android_Me {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-android.me"
            applicationIdSuffix '.android.me'
            versionName '-android.me'

            buildConfigField 'String', 'app_name', '\"android_me-Config\"'
        }
        emojify {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-emojify"
            applicationIdSuffix '.emogify'
            versionName '-emojify'

            buildConfigField 'String', 'app_name', '\"emojify-Config\"'
        }
        mywidget {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-mywidger"
            applicationIdSuffix '.mywidger'
            versionName '-mywidger'

            buildConfigField 'String', 'app_name', '\"mywidget-Config\"'
        }
        alarm {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-alarm"
            applicationIdSuffix '.alarm'
            versionName '-alarm'

            buildConfigField 'String', 'app_name', '\"alarm-Config\"'
        }
        receiver {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-receiver"
            applicationIdSuffix '.receiver'
            versionName '-receiver'

            buildConfigField 'String', 'app_name', '\"receiver-Config\"'
        }
        services {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-services"
            applicationIdSuffix '.services'
            versionName '-services'

            buildConfigField 'String', 'app_name', '\"services-Config\"'
        }
        animations {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix '-animations'
            applicationIdSuffix '.animations'
            versionName '-animations'

            buildConfigField 'String', 'app_name', '\"animations-Config\"'
        }
        demotest {
            dimension "tier"
            minSdkVersion 21
            versionNameSuffix "-demotest"
            applicationIdSuffix '.demotest'
            versionName '-demotest'

            buildConfigField 'String', 'app_name', '\"demotest-Config\"'
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        // To check for a certain build type, use variant.buildType.name == "<buildType>"
        if (names.contains("paid")) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }


    applicationVariants.all { variant ->
        variant.getCompileConfiguration().resolutionStrategy {
        }
        variant.runtimeConfiguration.resolutionStrategy {
        }
        variant.getAnnotationProcessorConfiguration().resolutionStrategy {
        }
    }
    sourceSets {
        android_Me {
            manifest.srcFile 'src/android_Me/AndroidManifest.xml'
        }
        emojify { assets.srcDirs = ['src/main/assets', 'src/emojify/assets/'] }
        main { assets.srcDirs = ['src/main/assets', 'src/alarm/assets/'] }
        animations { assets.srcDirs = ['src/main/assets', 'src/animations/assets/'] }
    }
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportVersion}"
    implementation 'com.android.support:support-v4:27.1.1'
    androidTestImplementation "com.android.support:support-annotations:${rootProject.ext.supportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintLayoutVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.supportVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportVersion}"
    implementation "com.jakewharton:butterknife:${rootProject.ext.butterKnifeVersion}"
    implementation 'com.google.android.gms:play-services-vision:15.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterKnifeVersion}"
    implementation 'com.jakewharton.timber:timber:4.7.0'
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:2.20.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"
    implementation "com.android.support:gridlayout-v7:${rootProject.ext.supportVersion}"
}
